
    # Crie um novo serviço para o nosso banco de dados, podemos utilizar um mysql, utilize a imagem mysql:5.7;
    # Precisamos definir uma senha root para o nosso bd, para isso utilize a variável MYSQL_ROOT_PASSWORD, lembre-se que é possível utilizar a sintaxe ${} para passar uma env do host, para a env do container;
    # Agora precisamos configurar nosso service com o ghost para utilizar o MySQL, para isso defina a variável database__client para mysql;
    # Defina o nome ghost para o nome do database utilizando a variável database__connection__database;
    # E então, indique a conexão para o nosso MySQL na env database__connection__host;
    # Para definir a pessoa usuária (root) e senha (a mesma que definimos no nosso MySQL), utilize respectivamente as envs database__connection__user e database__connection__password.
    # Utilize a opção depends_on para criar relações de dependências entre os serviços.
    # Suba o ambiente com o novo arquivo usando o docker-compose e então acesse a porta.


    # Configure o nosso serviço mysql para utilizar um volume, conforme vimos no conteúdo, utilize o caminho target /var/lib/mysql.
    # Ao invés de utilizar a rede padrão criada pelo Compose, defina uma rede chamada my-network para a comunicação dos dois serviços.
    # Suba o ambiente com o novo arquivo usando o docker-compose e então acesse-o.


version: '3'

services:
  ghost:
    image: ghost:1-alpine
    restart: always
    ports:
      - 2368:2368

    depends_on:
      - "db"
    environment:
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: password
      database__connection__database: ghost
    networks:
      - my-network
  
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - my-network
volumes:
    db-data:

networks:
    my-network: